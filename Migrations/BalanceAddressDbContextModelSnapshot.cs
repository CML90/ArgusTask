// <auto-generated />
using Argus_BalanceByAddressAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Argus_BalanceByAddressAPI.Migrations
{
    [DbContext(typeof(BalanceAddressDbContext))]
    partial class BalanceAddressDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Argus_BalanceByAddressAPI.Data.Models.BalanceAddress", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Slot")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Address");

                    b.ToTable("BalanceAddress");
                });

            modelBuilder.Entity("Cardano.Sync.Data.Models.ReducerState", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Slot")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Name");

                    b.ToTable("ReducerStates");
                });

            modelBuilder.Entity("Argus_BalanceByAddressAPI.Data.Models.BalanceAddress", b =>
                {
                    b.OwnsOne("Cardano.Sync.Data.Models.Datums.Lovelace", "Balance", b1 =>
                        {
                            b1.Property<string>("BalanceAddressAddress")
                                .HasColumnType("text");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric(20,0)");

                            b1.HasKey("BalanceAddressAddress");

                            b1.ToTable("BalanceAddress");

                            b1.WithOwner()
                                .HasForeignKey("BalanceAddressAddress");
                        });

                    b.Navigation("Balance")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
